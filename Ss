import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

public class YourTestClass {
    private YourController yourController;
    private MockMvc mockMvc;

    @BeforeEach
    public void setup() {
        yourController = new YourController(); // Replace with the actual name of your controller class
        mockMvc = MockMvcBuilders.standaloneSetup(yourController).build();
    }

    @Test
    public void testGetUNODetailsForCyrusImpactCalc() throws Exception {
        String requestData = "{\"wfmJobId\": \"123\"}"; // Replace with sample JSON request data
        mockMvc.perform(MockMvcRequestBuilders.post("/getUNODetailsForCyrusImpactCalc")
                .contentType(MediaType.APPLICATION_JSON)
                .content(requestData))
                .andExpect(status().isOk())
                .andExpect(content().json("{\"status\":\"OK\",\"result\":{\"summaryData\":{},\"spaceInfoData\":{},\"BDF8Data\":{},\"relayData\":{}}}"));
    }

    @Test
    public void testGetUNODetailsForCyrusImpactCalc_InvalidRequest() throws Exception {
        String requestData = "{\"wfmJobId\": \"\"}"; // Replace with invalid JSON request data
        mockMvc.perform(MockMvcRequestBuilders.post("/getUNODetailsForCyrusImpactCalc")
                .contentType(MediaType.APPLICATION_JSON)
                .content(requestData))
                .andExpect(status().isOk())
                .andExpect(content().json("{\"status\":\"Error\",\"result\":\"Please input psclobId in request body\"}"));
    }

    @Test
    public void testGetUNODetailsForCyrusImpactCalc_Exception() throws Exception {
        String requestData = "{}"; // Replace with JSON request data that causes an exception
        mockMvc.perform(MockMvcRequestBuilders.post("/getUNODetailsForCyrusImpactCalc")
                .contentType(MediaType.APPLICATION_JSON)
                .content(requestData))
                .andExpect(status().isOk())
                .andExpect(content().json("{\"status\":\"Error\",\"result\":\"Exception occurred in getting the response\"}"));
    }

    @Test
    public void testGetUNODetailsForCyrusImpactCalc_EmptyRequest() throws Exception {
        String requestData = ""; // Replace with empty JSON request data
        mockMvc.perform(MockMvcRequestBuilders.post("/getUNODetailsForCyrusImpactCalc")
                .contentType(MediaType.APPLICATION_JSON)
                .content(requestData))
                .andExpect(status().isOk())
                .andExpect(content().json("{\"status\":\"Error\",\"result\":\"Please input request body\"}"));
    }
}
